{"version":3,"sources":["pages/home/error.js","pages/home/createroom.js","pages/home/home.service.js","pages/home/option.js","pages/home/home.js","components/chat/index.js","pages/demo/timeline.js","pages/demo/messages.js","pages/demo/map.js","pages/demo/demo.js","pages/message/sidebar.js","pages/message/crypto.js","pages/message/chat.service.js","pages/message/message.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["JoinError","goback","Fragment","List","ListItem","style","color","fontSize","justifyContent","onClick","textDecoration","cursor","CreateRoom","id","useState","showcopy","setShowCopy","copyToClipboard","a","navigator","clipboard","writeText","setTimeout","console","log","message","Snackbar","open","anchorOrigin","vertical","horizontal","className","TextField","fullWidth","value","disabled","HomeService","getRoomId","axios","post","roomUrl","response","data","removeRoomId","roomid","createUser","name","userUrl","roomId","this","cardContentStyle","display","flexDirection","alignItems","height","btnStyle","backgroundColor","iconStyle","Options","onInvite","onDemo","Card","CardContent","Button","connect","dispatch","setSharedKey","shared_key","type","payload","Promise","resolve","setNameAndKey","obj","history","setId","isusercreating","setUserCreatingBool","isNewRoom","setNewRoomBool","isErro","setErrorBool","useEffect","URL","window","location","href","searchParams","get","init","setAllIds","onJoin","showAnimation","options","document","getElementsByClassName","transition","marginLeft","goBack","homeService","React","useCallback","push","goToChatRoom","username","getElementById","private_key","CircularProgress","label","target","ChatComponent","messages","map","chat","index","sender","key","Avatar","ChatComponentNoAvatar","origin","TimeLine","setActiveIndex","msg","i","setAttribute","anime","targets","y2","easing","duration","animateTo","e","cirindex","dest","getAttribute","width","x1","y1","x2","cx","cy","r","indexMapping","1","2","3","4","5","6","iconStyles","btnStyles","marginRight","Demo","mockChat","setMessage","activeMsg","setActiveMessage","isModalOpen","setModalOpen","hidePs","hide","indexMap","opacity","begin","querySelector","receiver","length","newmessage","filter","m","removeMessage","addMessage","show","showPs","Modal","disableBackdropClick","ListItemIcon","SideBar","users","logout","user","ListItemText","Crypto","encrypt","pt","crypt","AES","toString","decrypt","ct","enc","Utf8","chatService","privateKey","rcallback","newusercallback","socket","on","receiveMessage","emit","sid","otherusers","publicKey","rsa","public_key","onNewUserJoins","sendMessage","sharedKey","chatObject","callbackFuc","close","disconnect","io","Message","props","onLogout","onNewUser","friend","frnds","state","friends","setState","cur","onSend","inputfield","chatservice","onReceive","placeholder","variant","Component","initState","allMessages","reducer","action","loggedIn","store","createStore","App","path","exact","component","Home","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8629507c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Error from \"@material-ui/icons/ErrorOutlineOutlined\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\nconst JoinError =({goback}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <List>\r\n          <ListItem>\r\n            <Error style={{ color: \"orange\", fontSize: \"4.1rem\" }} />\r\n            <h4>Not able to join the room</h4>\r\n          </ListItem>\r\n          <ListItem>Room could be full</ListItem>\r\n          <ListItem>Shared link could be invalid</ListItem>\r\n          <ListItem style={{ justifyContent: \"center\" }} onClick={() => goback()} >\r\n            <h5 style={{textDecoration: \"underline\",cursor:\"pointer\"}} >Go back</h5>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { JoinError };\r\n","import React,{useState} from \"react\";\r\nimport { TextField,Snackbar } from \"@material-ui/core\";\r\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\nimport \"./home.styles.scss\";\r\n\r\nconst CreateRoom = ({ id }) => {\r\n  const [showcopy,setShowCopy] = useState(false)\r\n  const copyToClipboard = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(`http://localhost:3000?join=${id}`);\r\n      setShowCopy(true)\r\n      setTimeout(() => setShowCopy(false),1000)\r\n    } catch (error) {\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  };\r\n  return (\r\n    <span>\r\n      <Snackbar\r\n        open={showcopy}\r\n        anchorOrigin={{\r\n          vertical:\"top\",\r\n          horizontal:\"center\"\r\n        }}\r\n      >\r\n        <div className=\"copy-success\" >\r\n          <p>Link copied to clipboard</p>\r\n        </div>\r\n      </Snackbar>\r\n      <p>Share the below link with your friend to join the room.</p>\r\n      <div className=\"share-link\">\r\n        <TextField\r\n          fullWidth={true}\r\n          value={`http://localhost:3000?join=${id}`}\r\n          disabled={true}\r\n        />\r\n        <CopyIcon fontSize=\"small\" onClick={copyToClipboard} />\r\n      </div>\r\n      <p className=\"user-info\">\r\n        (Please note currently one-one chat is only supported)\r\n      </p>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import axios from \"axios\";\r\n\r\nclass HomeService {\r\n  constructor() {\r\n    this.roomUrl = \"/room\";\r\n    this.userUrl = \"/user\";\r\n  }\r\n  \r\n\r\n  getRoomId = async () => {\r\n    const response = await axios.post(`${this.roomUrl}/create`);\r\n    const data = response.data;\r\n    return data;\r\n  };\r\n\r\n  removeRoomId = async (roomid) => {\r\n    await axios.post(`${this.roomUrl}/remove`, {\r\n      id: roomid,\r\n    });\r\n    return true;\r\n  };\r\n\r\n  createUser = async (name,id) => {\r\n    const response = await axios.post(`${this.userUrl}/create`, {\r\n      name,\r\n      roomId : id\r\n    });\r\n    const data = response.data;\r\n    return data;\r\n  };\r\n}\r\n\r\nexport default HomeService;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Button } from \"@material-ui/core\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Telegram\";\r\nimport ArrowIcon from \"@material-ui/icons/ArrowForward\";\r\n\r\nimport \"./home.styles.scss\";\r\n\r\nconst Options = ({ onInvite,onDemo }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"material-card\">\r\n        <CardContent style={cardContentStyle}>\r\n          <div className=\"material-card-icon one\"></div>\r\n          <p>\r\n            Invite your friend and have some fun!!!.Don't worry the conversation\r\n            is completely encrypted.\r\n          </p>\r\n          <div className=\"btn-grp btn-invite\">\r\n            <Button\r\n              onClick={() => onInvite()}\r\n              style={{ ...btnStyle, backgroundColor: \"#FF8C00\" }}\r\n            >\r\n              Invite\r\n            </Button>\r\n            <SendIcon style={iconStyle} />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Card className=\"material-card\">\r\n        <CardContent style={cardContentStyle}>\r\n          <div className=\"material-card-icon two\"></div>\r\n          <p>\r\n            Explore how the end to end encryption works by visualizing a sample\r\n            conversation\r\n          </p>\r\n          <div className=\"btn-grp btn-demo\">\r\n            <Button  onClick={() => onDemo()} style={btnStyle}>Explore</Button>\r\n            <ArrowIcon style={iconStyle} />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardContentStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst btnStyle = {\r\n  backgroundColor: \"green\",\r\n  color: \"white\",\r\n};\r\n\r\nconst iconStyle = {\r\n  color: \"white\",\r\n};\r\nexport default Options\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { JoinError } from \"./error\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CreateRoom from \"./createroom\";\r\nimport homeService from \"./home.service\";\r\n\r\n// social icons\r\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\r\nimport Github from \"@material-ui/icons/GitHub\";\r\n\r\nimport \"./home.styles.scss\";\r\nimport Options from \"./option\";\r\n\r\nconst Login = ({ history, setSharedKey, setNameAndKey }) => {\r\n  const [id, setId] = useState(null);\r\n  const [isusercreating, setUserCreatingBool] = useState(false);\r\n  const [isNewRoom, setNewRoomBool] = useState(true);\r\n  const [isErro, setErrorBool] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const url = new URL(window.location.href);\r\n    const roomId = url.searchParams.get(\"join\");\r\n    if (roomId !== null) {\r\n      init(roomId);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const init = async (roomId) => {\r\n    setNewRoomBool(false);\r\n    await setAllIds(roomId, roomId);\r\n    onJoin();\r\n  };\r\n\r\n  const showAnimation = () => {\r\n    const options = document.getElementsByClassName(\"option-container\")[0];\r\n    options.style.transition = \"margin 0.5s ease-in\";\r\n    options.style.marginLeft = \"-110%\";\r\n  };\r\n\r\n  const goBack = async () => {\r\n    const options = document.getElementsByClassName(\"option-container\")[0];\r\n    options.style.transition = \"margin 0.5s ease-in\";\r\n    options.style.marginLeft = \"0%\";\r\n    await new homeService().removeRoomId(id);\r\n  };\r\n\r\n  const errGoBack = () => {\r\n    setErrorBool(false);\r\n    setUserCreatingBool(false);\r\n    setNewRoomBool(true);\r\n    goBack()\r\n  };\r\n\r\n  const onJoin = () => {\r\n    showAnimation();\r\n  };\r\n\r\n  const setAllIds = async (roomId, shared_key) => {\r\n    await setSharedKey(shared_key);\r\n    setId(roomId);\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const onInvite = async () => {\r\n    showAnimation();\r\n    const { roomId, shared_key } = await new homeService().getRoomId();\r\n    await setAllIds(roomId, shared_key);\r\n  };\r\n\r\n  const onDemo = React.useCallback(() => history.push(\"/demo\"), [history]);\r\n\r\n  const goToChatRoom = async () => {\r\n    setUserCreatingBool(true);\r\n    const username = document.getElementById(\"username\").value;\r\n    try {\r\n      const { name, private_key } = await new homeService().createUser(\r\n        username,\r\n        id\r\n      );\r\n      await setNameAndKey({\r\n        name,\r\n        private_key,\r\n      });\r\n      history.push(\"/chat\");\r\n    } catch (error) {\r\n      console.log(\"Error in joining room\", error.message);\r\n      setErrorBool(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h4 className=\"app-header\">E2EE chat application</h4>\r\n      <div className=\"container\">\r\n        <div className=\"option-container\">\r\n          <Options onInvite={onInvite} onDemo={onDemo} />\r\n        </div>\r\n        <div className=\"join-container\">\r\n          <Card className=\"material-card\">\r\n            <CardContent style={cardContentStyle}>\r\n              {isusercreating ? (\r\n                <React.Fragment>\r\n                  {isErro ? (\r\n                    <JoinError goback={errGoBack} />\r\n                  ) : (\r\n                    <div className=\"loading-div\">\r\n                      <CircularProgress />\r\n                      <h5>Joining conversation</h5>\r\n                    </div>\r\n                  )}\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <div className=\"material-card-icon three\"></div>\r\n                  <div>\r\n                    <TextField label=\"username\" id=\"username\" />\r\n                  </div>\r\n                  {isNewRoom && <CreateRoom id={id} />}\r\n                  <div className=\"btn-grp btn-join\">\r\n                    <Button onClick={goToChatRoom} style={btnStyle}>\r\n                      Join\r\n                    </Button>\r\n                    {isNewRoom && <p onClick={goBack}>Go back</p>}\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>Connect with me</p>\r\n        <span>\r\n          <p>\r\n            <a href=\"https://www.linkedin.com/in/hpk06/\" target='blank'><LinkedIn /></a>\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst cardContentStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst btnStyle = {\r\n  backgroundColor: \"green\",\r\n  color: \"white\",\r\n};\r\n\r\nconst mapDispatchtToProps = (dispatch) => ({\r\n  setSharedKey: (shared_key) => {\r\n    dispatch({\r\n      type: \"setsharedkey\",\r\n      payload: shared_key,\r\n    });\r\n    return Promise.resolve();\r\n  },\r\n  setNameAndKey: (obj) => {\r\n    dispatch({\r\n      type: \"setnameandkey\",\r\n      payload: obj,\r\n    });\r\n    return Promise.resolve();\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchtToProps)(Login);\r\n","import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst ChatComponent = ({ messages }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"chat\">\r\n        {messages.map((chat,index) => {\r\n          const { type, message, sender } = chat;\r\n          return (\r\n            <div className={`message ${type}`} key={index} >\r\n              <Avatar>{sender[0]}</Avatar>\r\n              <p>{message}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst ChatComponentNoAvatar = ({ messages }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"chat\">\r\n        {messages.map((chat,index) => {\r\n          const { type, message } = chat;\r\n          return (\r\n            <div className={`message ${type} no-avatar-p`} key={index}>\r\n              <p>{message}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { ChatComponent, ChatComponentNoAvatar };\r\n","import React, { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nimport \"./demo.styles.scss\";\r\n\r\nconst xdist = \"50%\";\r\nconst radius = \"7\";\r\nlet origin = \"0%\";\r\n\r\nconst TimeLine = ({ setActiveIndex, msg }) => {\r\n  useEffect(() => {\r\n    for (let i = 1; i <= 6; i++) {\r\n      setTimeout(() => {\r\n        const classes = document.getElementsByClassName(`c${i}`);\r\n        classes[0].setAttribute(\"class\", `com-circle c${i}`);\r\n      }, 1000);\r\n    }\r\n    anime({\r\n      targets: \".com-line-anim\",\r\n      y2: [origin, \"0%\"],\r\n      easing: \"linear\",\r\n      duration: 1000,\r\n    });\r\n    origin = \"0%\";\r\n  }, [msg]);\r\n\r\n  const animateTo = (e, cirindex) => {\r\n    if (cirindex !== 0) {\r\n      setActiveIndex(cirindex);\r\n      let dest = e.target.getAttribute(\"cy\");\r\n      if (dest > \"90%\") dest = \"100%\";\r\n      for (let i = 1; i <= cirindex; i++) {\r\n        const classes = document.getElementsByClassName(`c${i}`);\r\n        classes[0].setAttribute(\"class\", `com-circle c${i} active`);\r\n      }\r\n      for (let i = cirindex + 1; i <= 6; i++) {\r\n        const classes = document.getElementsByClassName(`c${i}`);\r\n        classes[0].setAttribute(\"class\", `com-circle c${i}`);\r\n      }\r\n      anime({\r\n        targets: \".com-line-anim\",\r\n        y2: [origin, dest],\r\n        easing: \"linear\",\r\n        duration: 1000,\r\n      });\r\n      origin = dest;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <svg height=\"100%\" width=\"100%\" className=\"time-line\">\r\n        <line\r\n          x1={xdist}\r\n          y1=\"0%\"\r\n          x2={xdist}\r\n          y2=\"100%\"\r\n          className=\"com-line\"\r\n        ></line>\r\n        <line x1={xdist} y1=\"0%\" x2={xdist} className=\"com-line-anim\"></line>\r\n\r\n        <circle\r\n          onClick={(e) => animateTo(e, 1)}\r\n          cx={xdist}\r\n          cy=\"5%\"\r\n          r={radius}\r\n          className=\"com-circle c1\"\r\n        ></circle>\r\n\r\n        <circle\r\n          onClick={(e) => animateTo(e, 2)}\r\n          cx={xdist}\r\n          cy=\"22%\"\r\n          r={radius}\r\n          className=\"com-circle c2\"\r\n        ></circle>\r\n\r\n        <circle\r\n          onClick={(e) => animateTo(e, 3)}\r\n          cx={xdist}\r\n          cy=\"41%\"\r\n          r={radius}\r\n          className=\"com-circle c3\"\r\n        ></circle>\r\n        <circle\r\n          onClick={(e) => animateTo(e, 4)}\r\n          cx={xdist}\r\n          cy=\"59%\"\r\n          r={radius}\r\n          className=\"com-circle c4\"\r\n        ></circle>\r\n        <circle\r\n          onClick={(e) => animateTo(e, 5)}\r\n          cx={xdist}\r\n          cy=\"78%\"\r\n          r={radius}\r\n          className=\"com-circle c5\"\r\n        ></circle>\r\n        <circle\r\n          onClick={(e) => animateTo(e, 6)}\r\n          cx={xdist}\r\n          cy=\"95%\"\r\n          r={radius}\r\n          className=\"com-circle c6\"\r\n        ></circle>\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TimeLine;\r\n","const messages = [\r\n  {\r\n    \"sender\" : \"Alice\",\r\n    \"receiver\" : \"Bob\",\r\n    \"message\" : \"Hi bob\",\r\n    \"type\" : \"sent\",\r\n  },\r\n  {\r\n    \"sender\" : \"Bob\",\r\n    \"receiver\" : \"Alice\",\r\n    \"message\" : \"Hi alice\",\r\n    \"type\" : \"received\"\r\n  },\r\n  {\r\n    \"sender\" : \"Alice\",\r\n    \"receiver\" : \"Bob\",\r\n    \"message\" : \"How are you?\",\r\n    \"type\" : \"sent\"\r\n  },\r\n  {\r\n    \"sender\" : \"Bob\",\r\n    \"receiver\" : \"Alice\",\r\n    \"message\" : \"Doing great,how about you?\",\r\n    \"type\" : \"received\"\r\n  },\r\n  {\r\n    \"sender\" : \"Alice\",\r\n    \"receiver\" : \"Bob\",\r\n    \"message\" : \"Good,dinner tonight?\",\r\n    \"type\" : \"sent\"\r\n  },\r\n  {\r\n    \"sender\" : \"Bob\",\r\n    \"receiver\" : \"Alice\",\r\n    \"message\" : \"Sure,same place same time?\",\r\n    \"type\" : \"received\"\r\n  },\r\n  {\r\n    \"sender\" : \"Alice\",\r\n    \"receiver\" : \"Bob\",\r\n    \"message\" : \"ok cool\",\r\n    \"type\" : \"sent\"\r\n  },\r\n  {\r\n    \"sender\" : \"Bob\",\r\n    \"receiver\" : \"Alice\",\r\n    \"message\" : \"Yeah!!c ya\",\r\n    \"type\" : \"received\"\r\n  },\r\n  {\r\n    \"sender\" : \"Alice\",\r\n    \"receiver\" : \"Bob\",\r\n    \"message\" : \"Bye\",\r\n    \"type\" : \"sent\"\r\n  }\r\n];\r\n\r\nexport default messages;","const indexMapping = {\r\n  \"-1\" : 0,\r\n  1 : 1,\r\n  2 : 2,\r\n  3 : 3,\r\n  4 : 5,\r\n  5 : 6,\r\n  6 : 8\r\n}\r\n\r\nexport default indexMapping;","import React, { useState } from \"react\";\r\nimport anime from \"animejs\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport { ChatComponent } from \"../../components/chat\";\r\n\r\nimport Next from \"@material-ui/icons/SkipNext\";\r\nimport Previous from \"@material-ui/icons/SkipPrevious\";\r\nimport Key from \"@material-ui/icons/VpnKey\";\r\nimport Circle from \"@material-ui/icons/RadioButtonUncheckedOutlined\";\r\nimport TimeLine from \"./timeline\";\r\n\r\nimport mockChat from \"./messages\";\r\nimport indexMap from \"./map\";\r\n\r\nimport \"./demo.styles.scss\";\r\n\r\nconst iconStyles = {\r\n  fontSize: \"2rem\",\r\n  color: \"black\",\r\n};\r\n\r\nconst btnStyles = {\r\n  backgroundColor: \"#d3d3d3\",\r\n  marginLeft: \"5px\",\r\n  marginRight: \"5px\",\r\n};\r\n\r\nconst Demo = () => {\r\n  const [messages, setMessage] = useState([mockChat[0]]);\r\n  const [activeMsg, setActiveMessage] = useState(mockChat[0]);\r\n  const [isModalOpen, setModalOpen] = useState(true);\r\n\r\n  const showPs = (index) => {\r\n    let show = [];\r\n    for (let i = 1; i <= indexMap[index]; i++) {\r\n      show.push(\".p\" + i);\r\n    }\r\n    anime({\r\n      targets: show,\r\n      duration: 3000,\r\n      opacity: 1,\r\n      begin: function () {\r\n        document.querySelector(show[0]).style.display = \"block\";\r\n      },\r\n    });\r\n  };\r\n\r\n  const hidePs = (index) => {\r\n    let hide = [];\r\n    for (let i = indexMap[index] + 1; i <= 8; i++) {\r\n      hide.push(\".p\" + i);\r\n    }\r\n    anime({\r\n      targets: hide,\r\n      duration: 3000,\r\n      opacity: 0,\r\n      begin: function () {\r\n        if (hide[0]) {\r\n          document.querySelector(hide[0]).style.display = \"hidden\";\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const setActiveIndex = (index) => {\r\n    showPs(index);\r\n    hidePs(index);\r\n  };\r\n\r\n  const addMessage = () => {\r\n    if (messages.length < mockChat.length) {\r\n      const newmessage = [...messages, mockChat[messages.length]];\r\n      setMessage(newmessage);\r\n      setActiveMessage(mockChat[messages.length]);\r\n      hidePs(\"-1\");\r\n    }\r\n  };\r\n\r\n  const removeMessage = () => {\r\n    if (messages.length > 1) {\r\n      const newmessage = messages.filter((m, i) => i !== messages.length - 1);\r\n      setMessage(newmessage);\r\n      setActiveMessage(newmessage[newmessage.length - 1]);\r\n      hidePs(\"-1\");\r\n    }\r\n  };\r\n\r\n  const { sender, receiver, message } = activeMsg;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"demo-body\">\r\n        <div className=\"demo-page\">\r\n          <div className=\"ui-demo\">\r\n            <ChatComponent messages={messages} />\r\n            {messages.length === mockChat.length && (\r\n              <p className=\"eoc-message\">\r\n                (You have reached the end of conversation)\r\n              </p>\r\n            )}\r\n            <div className=\"action-tab\">\r\n              <div>\r\n                <Button style={btnStyles} onClick={() => removeMessage()}>\r\n                  <Previous style={iconStyles} />\r\n                </Button>\r\n                <Button style={btnStyles} onClick={() => addMessage()}>\r\n                  <Next style={iconStyles} />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"backend-demo\">\r\n            <div className=\"visualization\">\r\n              <div className=\"alice-side\">\r\n                <p className=\"pp p1\">{`${sender} sent \"${message}\"`}</p>\r\n                <p className=\"pp p2\">\r\n                  <span>Encrypted using the shared key</span>\r\n                  <Key style={{ color: \"orange\" }} />\r\n                </p>\r\n                <p className=\"pp p3\">\r\n                  <span>{`Encrypted using ${receiver}'s public key `}</span>\r\n                  <Key style={{ color: \"green\" }} />\r\n                </p>\r\n                <p className=\"pp p4\">{`Encrypted message sent to ${receiver}`}</p>\r\n              </div>\r\n              <div className=\"tmline\">\r\n                <TimeLine msg={message} setActiveIndex={setActiveIndex} />\r\n              </div>\r\n              <div className=\"bob-side\">\r\n                <div className=\"sixedbox\"> </div>\r\n                <p className=\"pp p5\">{`Encrypted message received by ${receiver}`}</p>\r\n                <p className=\"pp p6\">\r\n                  <span>{`Decrypted using ${receiver}'s private key `}</span>\r\n                  <Key style={{ color: \"green\" }} />\r\n                </p>\r\n                <p className=\"pp p7\">\r\n                  <span>Decrypted using the shared key</span>\r\n                  <Key style={{ color: \"orange\" }} />\r\n                </p>\r\n                <p className=\"pp p8\">{`${receiver} received \"${message}\"`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          className=\"info-modal\"\r\n          open={isModalOpen}\r\n          disableBackdropClick={false}\r\n        >\r\n          <div className=\"info\">\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <Next style={iconStyles} />\r\n                </ListItemIcon>\r\n                To go to the next message\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <Previous style={iconStyles} />\r\n                </ListItemIcon>\r\n                To go to the previous message\r\n              </ListItem>\r\n              <ListItem >\r\n                <ListItemIcon>\r\n                <Circle style={{ ...iconStyles, color: \"#d3d3d3\" }} /> \r\n                </ListItemIcon>\r\n                To navigate to the various steps in encryption/decryption timeline\r\n              </ListItem>\r\n              <ListItem style={{display:\"flex\",flexDirection:\"row-reverse\"}} >\r\n                <Button onClick={() => setModalOpen(false)} style={{backgroundColor:\"#d3d3d3\"}} >\r\n                  Close\r\n                </Button>\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport LogoutIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst color = [\"orange\",\"indigo\"];\r\n\r\nconst SideBar = ({ users,logout }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <span>\r\n        <p>All participants</p>\r\n        <List>\r\n          {users.map((user, index) => (\r\n            <div key={index} className=\"user\">\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <Avatar style={{ backgroundColor: color[index] }}>{user[0]}</Avatar>\r\n                </ListItemIcon>\r\n                <ListItemText>{user}</ListItemText>\r\n              </ListItem>\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </span>\r\n      <div className=\"action\">\r\n        <span onClick={() => logout()} >\r\n          <LogoutIcon fontSize=\"small\" />\r\n          <p>Logout</p>\r\n        </span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import crypt from 'crypto-js';\r\nclass Crypto {\r\n  constructor(key){\r\n    this.key = key;\r\n  }\r\n\r\n  encrypt = pt => {\r\n    const ct = crypt.AES.encrypt(pt, this.key).toString();\r\n    return ct;\r\n  }\r\n\r\n  decrypt = ct => {\r\n    const bytes  = crypt.AES.decrypt(ct, this.key);\r\n    const pt = bytes.toString(crypt.enc.Utf8);\r\n    return pt;\r\n  }\r\n\r\n}\r\n\r\nexport default Crypto;","import io from \"socket.io-client\";\r\nimport rsa from \"node-rsa\";\r\nimport crypt from \"./crypto\";\r\n\r\nclass chatService {\r\n  constructor(roomId, username, privateKey, rcallback, newusercallback) {\r\n    this.socket = io(\"http://localhost:9000\");\r\n    this.roomId = roomId;\r\n    this.name = username;\r\n    this.sharedKey = new crypt(roomId);\r\n    this.sid = null;\r\n    this.newusercallback = newusercallback;\r\n    this.callbackFuc = rcallback;\r\n    this.init();\r\n    this.privateKey = new rsa(privateKey);\r\n    this.publicKey = null;\r\n  }\r\n\r\n  init = () => {\r\n    this.socket.on(\"message\", this.receiveMessage);\r\n    this.socket.on(\"connect\", () => {\r\n      this.socket.emit(\"join\", { roomId: this.roomId, username: this.name });\r\n    });\r\n    this.socket.on(\"ack\", ({ sid, otherusers }) => {\r\n      this.sid = sid;\r\n      if (otherusers) {\r\n        this.publicKey = new rsa(otherusers[0].public_key);\r\n        this.newusercallback(otherusers[0].name);\r\n      }\r\n    });\r\n    this.socket.on(\"newchatter\", (obj) => this.onNewUserJoins(obj));\r\n  };\r\n\r\n  onNewUserJoins = (obj) => {\r\n    const { username, public_key } = obj;\r\n    this.publicKey = new rsa(public_key);\r\n    this.newusercallback(username);\r\n  };\r\n\r\n  sendMessage = (msg) => {\r\n    let message = this.sharedKey.encrypt(msg);\r\n    message = this.publicKey.encrypt(message, \"base64\");\r\n    this.socket.emit(\"message\", {\r\n      sender: this.name,\r\n      message,\r\n      roomId: this.roomId,\r\n      sid: this.sid,\r\n    });\r\n  };\r\n\r\n  receiveMessage = (chatObject) => {\r\n    let message = this.privateKey.decrypt(chatObject.message, \"ascii\");\r\n    message = this.sharedKey.decrypt(message);\r\n    this.callbackFuc({\r\n      ...chatObject,\r\n      message,\r\n      type: \"received\",\r\n    });\r\n  };\r\n\r\n  close = () => {\r\n    this.socket.disconnect();\r\n  };\r\n}\r\n\r\nexport default chatService;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextField, Button, Avatar } from \"@material-ui/core\";\r\nimport SideBar from \"./sidebar\";\r\nimport { ChatComponentNoAvatar } from \"../../components/chat\";\r\n\r\nimport chatService from \"./chat.service\";\r\n\r\nimport \"./message.styles.scss\";\r\n\r\nclass Message extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chatservice = null;\r\n    this.state = {\r\n      messages: [],\r\n      friends : [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { roomId, username,privateKey } = this.props;\r\n    this.chatservice = new chatService(roomId, username,privateKey,this.onReceive,this.onNewUser);\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n  onNewUser = (friend) => {\r\n    const frnds = this.state.friends;\r\n    frnds.push(friend);\r\n    this.setState({\r\n      friends : frnds\r\n    })\r\n  }\r\n\r\n  addMessage = (obj) => {\r\n    const cur = this.state.messages;\r\n    cur.push(obj);\r\n    this.setState({\r\n      message: cur,\r\n    });\r\n  };\r\n\r\n  onSend = () => {\r\n    const inputfield = document.getElementById(\"user-message\");\r\n    const message = inputfield.value;\r\n    this.addMessage({\r\n      sender: this.props.username,\r\n      message,\r\n      type: \"sent\",\r\n    });\r\n    this.chatservice.sendMessage(message);\r\n    inputfield.value = \"\";\r\n  };\r\n\r\n  onReceive = (chatObject) => {\r\n    this.addMessage(chatObject);\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    this.chatservice.close()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-room\">\r\n        <div className=\"all-participants\">\r\n          <SideBar users={this.state.friends} logout={this.onLogout} />\r\n        </div>\r\n        <div className=\"messages\">\r\n          <div className=\"header\" key=\"header\">\r\n            <Avatar style={{ backgroundColor: \"green\" }}>a</Avatar>\r\n            <div>\r\n              <p className=\"captilize\" >{this.props.username}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"all-msgs\">\r\n            <div>\r\n              <ChatComponentNoAvatar messages={this.state.messages} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <TextField\r\n              placeholder=\"Type your messages here\"\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              id=\"user-message\"\r\n            />\r\n            <Button\r\n              onClick={this.onSend}\r\n              style={{ backgroundColor: \"green\", color: \"white\" }}\r\n            >\r\n              Send\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roomId: state.roomId,\r\n  username: state.username,\r\n  privateKey: state.privateKey,\r\n  sharedKey: state.sharedKey,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Message);\r\n","const initState = {\r\n  roomId: null,\r\n  username:null,\r\n  allMessages: [],\r\n  privateKey: null,\r\n  sharedKey: null,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"login\":\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n      };\r\n    case \"setnameandkey\":\r\n      return {\r\n        ...state,\r\n        privateKey: action.payload[\"private_key\"],\r\n        username : action.payload[\"name\"]\r\n      };\r\n    case \"setsharedkey\":\r\n      return {\r\n        ...state,\r\n        sharedKey: action.payload,\r\n        roomId : action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nconst store = createStore(reducer);\r\nexport default store;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Home from \"./pages/home/home\";\r\nimport Demo from \"./pages/demo/demo\";\r\nimport Message from \"./pages/message/message\"\r\n\r\n// redux imports\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Provider store={store}  >\r\n        <Router>\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n          <Route path=\"/demo\" component={Demo} />\r\n          <Route path=\"/chat\" component={Message} />\r\n        </Router>\r\n      </Provider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}